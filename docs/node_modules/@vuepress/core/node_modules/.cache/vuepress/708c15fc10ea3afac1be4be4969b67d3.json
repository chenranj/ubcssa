{"remainingRequest":"/Users/chenranj/Downloads/ubcssa/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/chenranj/Downloads/ubcssa/docs/node_modules/vuepress-plugin-fulltext-search/services/flexsearchSvc.js","dependencies":[{"path":"/Users/chenranj/Downloads/ubcssa/docs/node_modules/vuepress-plugin-fulltext-search/services/flexsearchSvc.js","mtime":1627263858000},{"path":"/Users/chenranj/Downloads/ubcssa/docs/node_modules/cache-loader/dist/cjs.js","mtime":1627263858000},{"path":"/Users/chenranj/Downloads/ubcssa/docs/node_modules/babel-loader/lib/index.js","mtime":1627263858000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/chenranj/Downloads/ubcssa/docs/node_modules/vuepress-plugin-fulltext-search/services/flexsearchSvc.js"],"names":["Flexsearch","_","index","cyrillicIndex","cjkIndex","pagesByPath","cjkRegex","buildIndex","allPages","options","pages","filter","p","frontmatter","search","indexSettings","encode","tokenize","split","async","doc","id","field","add","cyrillicPages","charsets","cyrillic","cjkPages","cjk","length","str","cjkWords","m","exec","push","keyBy","match","queryString","queryTerms","limit","searchParams","query","boost","searchResult1","searchResult2","searchResult3","searchResult","uniqBy","result","map","page","parentPageTitle","getParentPageTitle","getAdditionalInfo","normalizeString","resultByParent","groupBy","values","arr","x","i","flat","pathParts","path","parentPagePath","parentPage","title","toLowerCase","getMatch","getFullHeading","slug","contentStr","headerIndex","headers","findLastIndex","h","charIndex","getContentStr","headingStr","headersPath","header","unshift","level","join","prefixPath","slice","prefixLength","sum","headingHighlight","termLength","terms","matches","t","getHeaderMatch","getContentMatch","every","find","term","normalizedTitle","indexOf","normalizedContent","snippetLength","lineStartIndex","content","lastIndexOf","lineEndIndex","line","lineCharIndex","contentHighlight","additionalCharactersFromStart","round","snippetStart","Math","max","snippetEnd","min","trim","normalize","replace"],"mappings":"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","sourcesContent":["import Flexsearch from 'flexsearch'\n// Use when flexSearch v0.7.0 will be available\n// import cyrillicCharset from 'flexsearch/dist/lang/cyrillic/default.min.js'\n// import cjkCharset from 'flexsearch/dist/lang/cjk/default.min.js'\nimport _ from 'lodash'\n\nlet index = null\nlet cyrillicIndex = null\nlet cjkIndex = null\nlet pagesByPath = null\n\nconst cjkRegex = /[\\u3131-\\u314e|\\u314f-\\u3163|\\uac00-\\ud7a3]|[\\u4E00-\\u9FCC\\u3400-\\u4DB5\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|[\\ud86a-\\ud86c][\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|[\\u3041-\\u3096]|[\\u30A1-\\u30FA]/giu\n\nexport default {\n  buildIndex(allPages, options) {\n    const pages = allPages.filter(p => !p.frontmatter || p.frontmatter.search !== false)\n    const indexSettings = {\n      encode: options.encode || 'simple',\n      tokenize: options.tokenize || 'forward',\n      split: options.split || /\\W+/,\n      async: true,\n      doc: {\n        id: 'key',\n        // here you choose the fields you want to index.\n        // for me I will search in the title and the content of each page.\n        // of course I stripped the content before so I use the plain text content not the markdown text\n        field: ['title', 'headersStr', 'content'],\n      },\n    }\n    index = new Flexsearch(indexSettings)\n    index.add(pages)\n\n    const cyrillicPages = pages.filter(p => p.charsets.cyrillic)\n    const cjkPages = pages.filter(p => p.charsets.cjk)\n\n    if (cyrillicPages.length) {\n      cyrillicIndex = new Flexsearch({\n        ...indexSettings,\n        encode: 'icase',\n        split: /\\s+/,\n        tokenize: 'forward',\n      })\n      cyrillicIndex.add(cyrillicPages)\n    }\n    if (cjkPages.length) {\n      cjkIndex = new Flexsearch({\n        ...indexSettings,\n        encode: false,\n        tokenize: function(str) {\n          const cjkWords = []\n          let m = null\n          do {\n            m = cjkRegex.exec(str)\n            if (m) {\n              cjkWords.push(m[0])\n            }\n          } while (m)\n          return cjkWords\n        },\n      })\n      cjkIndex.add(cjkPages)\n    }\n    pagesByPath = _.keyBy(pages, 'path')\n  },\n  async match(queryString, queryTerms, limit = 7) {\n    const searchParams = [\n      {\n        field: 'title',\n        query: queryString,\n        limit,\n        boost: 10,\n      },\n      {\n        field: 'headersStr',\n        query: queryString,\n        limit,\n        boost: 7,\n      },\n      {\n        field: 'content',\n        query: queryString,\n        limit,\n      },\n    ]\n    const searchResult1 = await index.search(searchParams)\n    const searchResult2 = cyrillicIndex ? await cyrillicIndex.search(searchParams) : []\n    const searchResult3 = cjkIndex ? await cjkIndex.search(searchParams) : []\n    const searchResult = _.uniqBy([...searchResult1, ...searchResult2, ...searchResult3], 'path')\n    const result = searchResult.map(page => ({\n      ...page,\n      parentPageTitle: getParentPageTitle(page),\n      ...getAdditionalInfo(page, normalizeString(queryString), queryTerms),\n    }))\n\n    const resultByParent = _.groupBy(result, 'parentPageTitle')\n    return _.values(resultByParent)\n      .map(arr =>\n        arr.map((x, i) => {\n          if (i === 0) return x\n          return { ...x, parentPageTitle: null }\n        }),\n      )\n      .flat()\n  },\n  normalizeString,\n}\n\nfunction getParentPageTitle(page) {\n  const pathParts = page.path.split('/')\n  let parentPagePath = '/'\n  if (pathParts[1]) parentPagePath = `/${pathParts[1]}/`\n\n  const parentPage = pagesByPath[parentPagePath] || page\n  return parentPage.title\n}\n\nfunction getAdditionalInfo(page, queryString, queryTerms) {\n  const query = queryString.toLowerCase()\n  const match = getMatch(page, query, queryTerms)\n  if (!match)\n    return {\n      ...getFullHeading(page),\n      slug: '',\n      contentStr: null,\n    }\n\n  if (match.headerIndex != null) {\n    // header match\n    return {\n      ...getFullHeading(page, match.headerIndex, match),\n      slug: '#' + page.headers[match.headerIndex].slug,\n      contentStr: null,\n    }\n  }\n\n  // content match\n  let headerIndex = _.findLastIndex(page.headers || [], h => h.charIndex != null && h.charIndex < match.charIndex)\n  if (headerIndex === -1) headerIndex = null\n\n  return {\n    ...getFullHeading(page, headerIndex),\n    slug: headerIndex == null ? '' : '#' + page.headers[headerIndex].slug,\n    ...getContentStr(page, match),\n  }\n}\n\nfunction getFullHeading(page, headerIndex, match) {\n  if (headerIndex == null) return { headingStr: page.title }\n  const headersPath = []\n  while (headerIndex != null) {\n    const header = page.headers[headerIndex]\n    headersPath.unshift(header)\n    headerIndex = _.findLastIndex(page.headers, h => h.level === header.level - 1, headerIndex - 1)\n    if (headerIndex === -1) headerIndex = null\n  }\n\n  const headingStr = headersPath.map(h => h.title).join(' > ')\n  const prefixPath = headersPath.slice(0, -1)\n  const prefixLength = _.sum(prefixPath.map(p => (p.title || '').length)) + prefixPath.length * 3\n  const headingHighlight = match && match.headerIndex != null && [match.charIndex + prefixLength, match.termLength]\n  return { headingStr, headingHighlight }\n}\n\nfunction getMatch(page, query, terms) {\n  const matches = terms\n    .map(t => {\n      return getHeaderMatch(page, t) || getContentMatch(page, t)\n    })\n    .filter(m => m)\n  if (matches.length === 0) return null\n\n  if (matches.every(m => m.headerIndex != null)) {\n    return getHeaderMatch(page, query) || matches[0]\n  }\n\n  return getContentMatch(page, query) || matches.find(m => m.headerIndex == null)\n}\n\nfunction getHeaderMatch(page, term) {\n  if (!page.headers) return null\n  for (let i = 0; i < page.headers.length; i++) {\n    const h = page.headers[i]\n    const charIndex = h.normalizedTitle.indexOf(term)\n    if (charIndex === -1) continue\n    return {\n      headerIndex: i,\n      charIndex,\n      termLength: term.length,\n    }\n  }\n  return null\n}\n\nfunction getContentMatch(page, term) {\n  if (!page.normalizedContent) return null\n  const charIndex = page.normalizedContent.indexOf(term)\n  if (charIndex === -1) return null\n\n  return { headerIndex: null, charIndex, termLength: term.length }\n}\n\nfunction getContentStr(page, match) {\n  const snippetLength = 120\n  const { charIndex, termLength } = match\n\n  let lineStartIndex = page.content.lastIndexOf('\\n', charIndex)\n  let lineEndIndex = page.content.indexOf('\\n', charIndex)\n\n  if (lineStartIndex === -1) lineStartIndex = 0\n  if (lineEndIndex === -1) lineEndIndex = page.content.length\n\n  const line = page.content.slice(lineStartIndex, lineEndIndex)\n  const lineCharIndex = charIndex - lineStartIndex\n  const contentHighlight = [lineCharIndex, termLength]\n\n  if (snippetLength >= line.length) return { contentStr: line, contentHighlight }\n\n  const additionalCharactersFromStart = _.round((snippetLength - termLength) / 2)\n  const snippetStart = Math.max(lineCharIndex - additionalCharactersFromStart, 0)\n  const snippetEnd = Math.min(snippetStart + snippetLength, line.length)\n  let contentStr = line.slice(snippetStart, snippetEnd)\n  contentHighlight[0] = contentHighlight[0] - snippetStart\n\n  if (snippetStart > 0) {\n    contentStr = '...' + contentStr\n    contentHighlight[0] = contentHighlight[0] + 3\n  }\n  if (snippetEnd < line.length) contentStr = contentStr + '...'\n  return {\n    contentStr,\n    contentHighlight,\n  }\n}\n\nfunction normalizeString(str) {\n  if (!str) return str\n  return str\n    .trim()\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n}\n"]}]}